"""    state_missions.py        mission select menu state"""import sysimport ossys.path.append("C:/Python27/proj/BetterConsoleFunctions/V3")import bcfout = bcfimport pygamefrom pygame.locals import *import app_constantsfrom app_constants import cwdfrom app_constants import makeRelativePathfrom resource import TEXTURES,FONTSimport resourceimport missionimport utilimport saveimport gui.labelimport gui.button""" state vairbles """lbl_title = gui.label.label()btn_quit = gui.button.button()btn_nav = [gui.button.button() , gui.button.button()] # 0-up, 1-down""" output vairables """change_state = "" # when this is set to something other than "" the calling code will change to that statedef quit_to_menu ():    save.clear()    out.pl("quit pressed")#def menu_btn_pressed ( which ):    # use these globals    global change_state, lbl_title, btn_quit, btn_nav    if which == "menu":        out.pl("quit button pressed")        quit_to_menu()    # switch state    change_state = which#def navigate ( direction ):    if direction == "up":        pass    elif direction == "down":        pass#def init ():    # use these globals    global change_state, lbl_title, btn_quit, btn_nav    # reset change_state    change_state = ""    # initialize lbl_title    lbl_title.x = 220    lbl_title.y = 10    lbl_title.font = FONTS.setnextloadsize(30).Clacon30    lbl_title.text = "Mission Select"    lbl_title.textcolour = (255,255,255)    lbl_title.drawback = False    lbl_title.wordwrap = False    lbl_title.update()    # initialize quit button    btn_quit.x = 10    btn_quit.y = 449    btn_quit.horpad = 4    btn_quit.verpad = 4    btn_quit.font = FONTS.setnextloadsize(16).Clacon16    btn_quit.text = "quit"    btn_quit.textcolour = (255,255,255)    btn_quit.backcolour = (40,40,40)    btn_quit.hoverchange = True    btn_quit.calculate()    btn_quit.register_callback(menu_btn_pressed , "menu")    # initialize up and down buttons    for i,b in enumerate(btn_nav):        b.x = 30        if i == 0:            b.y = 50        elif i == 1:            b.y = 420        b.horpad = 4        b.verpad = 4        b.font = FONTS.setnextloadsize(16).Clacon16        if i == 0:            b.text = "^"        elif i == 1:            b.text = "v"        b.textcolour = (255,255,255)        b.backcolour = (40,40,40)        b.hoverchange = True        b.calculate()        if i == 0:            btn_quit.register_callback(navigate , "up")        elif i == 1:            btn_quit.register_callback(navigate , "down")#def update ():    # use these globals    global change_state, lbl_title, btn_quit, btn_nav    # update the buttons    btn_quit.update()    for b in btn_nav:        b.update()    ##def draw ( wsurface ):    # use these globals    global change_state, lbl_title, btn_quit, btn_nav    # draw heading label and main buttons    lbl_title.draw( wsurface )    btn_quit.draw( wsurface )    for b in btn_nav:        b.draw( wsurface )    ##