"""    enemy_factory.py        A class that can take in a gameinfo object and spawn enemies at the correct times.    """import sysimport osimport mathsys.path.append("C:/Python27/proj/BetterConsoleFunctions/V3")import bcfout = bcfimport pygamefrom pygame.locals import *import objectclass enemyFactory :    def __init__ ( self ) :        self.reset()    #/        def reset ( self ) :        self.enemy_list = [] # list of enemies currectly on screen        self.paused = False        self.ready = False # if the instance is ready to start creating enemies        self.started = False    #/        def setPause ( self , p ) :        self.paused = p        if self.paused == True :            pass # add code here to be executed on game pause        elif self.paused == False :            pass # add code here to be executed on game unpause    #/        def init ( self , gi ) :        """ Sets up the enemy factory with respect to the gameinfo object 'gi' """        pass    #/        def start ( self ) :        """ starts the enemy factory provided it has been initialised with a gameinfo object through 'init' """        if not self.ready :            return        # set the instance to have officialy 'started'        self.started = True    #/        def events ( self , event ) :        pass    #/        def tick ( self , c ) :        if not self.ready or not self.started :            return    #/        def draw ( self , wsurface ) :        """            enemies will be drawn by the context,            so this method will only be used to draw other things like debug stats        """        pass    #/#/